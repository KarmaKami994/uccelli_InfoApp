name: Flutter CI - Android Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    # NEU: Standard-Arbeitsverzeichnis f端r alle 'run' Befehle festlegen.
    # Dies ist die wichtigste Korrektur. Alle Befehle werden nun
    # im Unterordner ausgef端hrt, wo sich Ihr Flutter-Projekt befindet.
    defaults:
      run:
        working-directory: ./uccelli_info_app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'
          cache: true
          # Cache-Key anpassen, um den Projektpfad zu ber端cksichtigen
          cache-key: flutter-${{ runner.os }}-${{ matrix.flutter-version }}-${{ hashFiles('**/pubspec.lock') }}

      # Dieser Befehl funktioniert jetzt, weil er im Ordner './uccelli_info_app' ausgef端hrt wird
      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      - name: Install dependencies and generate files
        run: |
          flutter pub get
          flutter gen-l10n

      - name: Build Flutter App
        run: flutter build apk --release

      - name: Rename release artifact
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/uccelli-app-${{ github.ref_name }}.apk

      # Der 'files' Pfad muss den Unterordner enthalten, da er sich auf das Root-Verzeichnis bezieht.
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: uccelli_info_app/build/app/outputs/flutter-apk/uccelli-app-${{ github.ref_name }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}